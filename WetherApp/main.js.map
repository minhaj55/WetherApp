{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/contact-detail/contact-detail.component.css","webpack:///./src/app/contact-detail/contact-detail.component.html","webpack:///./src/app/contact-detail/contact-detail.component.ts","webpack:///./src/app/contact-list/contact-list.component.css","webpack:///./src/app/contact-list/contact-list.component.html","webpack:///./src/app/contact-list/contact-list.component.ts","webpack:///./src/app/my-dashboard/my-dashboard.component.css","webpack:///./src/app/my-dashboard/my-dashboard.component.html","webpack:///./src/app/my-dashboard/my-dashboard.component.ts","webpack:///./src/app/user-register/user-register.component.css","webpack:///./src/app/user-register/user-register.component.html","webpack:///./src/app/user-register/user-register.component.ts","webpack:///./src/app/weather-service.service.ts","webpack:///./src/app/wehther-component/wehther-component.component.css","webpack:///./src/app/wehther-component/wehther-component.component.html","webpack:///./src/app/wehther-component/wehther-component.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"navbar navbar-expand-lg  bg-warning\\\">\\n    <ol><a routerLink=\\\"contactlist\\\">Contact List</a></ol>\\n    <ol><a routerLink=\\\"contactdetail\\\">Contact Detail</a> </ol>\\n    <ol><a routerLink=\\\"login\\\">Login</a> </ol>\\n    <ol><a routerLink=\\\"register\\\">Register</a> </ol>\\n\\n</div><br>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'WetherApp';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MyDashboardComponent } from './my-dashboard/my-dashboard.component';\nimport { MatGridListModule, MatCardModule, MatMenuModule, MatIconModule, MatButtonModule } from '@angular/material';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { WehtherComponentComponent } from './wehther-component/wehther-component.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { ContactListComponent } from './contact-list/contact-list.component';\nimport { ContactDetailComponent } from './contact-detail/contact-detail.component';\nimport { RouterModule, Route, Routes } from '@angular/router';\nimport {WeatherServiceService} from './weather-service.service'\nimport { from } from 'rxjs';\nimport { UserRegisterComponent } from './user-register/user-register.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport {NgxPaginationModule} from 'ngx-pagination';\nconst myRoute : Routes=[\n  {\n    path: 'contactlist',\n    component: ContactListComponent\n  },\n  {\n    path: 'contactdetail',\n    component: ContactDetailComponent\n  },\n  {\n    path: 'login',\n    component: WehtherComponentComponent\n  },\n  {\n    path: 'register',\n    component: UserRegisterComponent\n  }\n]\n@NgModule({\n  declarations: [\n    AppComponent,\n    MyDashboardComponent,\n    WehtherComponentComponent,\n    ContactListComponent,\n    ContactDetailComponent,\n    UserRegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatIconModule,\n    MatButtonModule,\n    LayoutModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    NgxPaginationModule,\n    RouterModule.forRoot(myRoute)\n  ],\n  providers: [WeatherServiceService,HttpClientModule],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule {\n  \n }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRhY3QtZGV0YWlsL2NvbnRhY3QtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"col-md-8\\\">\\n<fieldset>\\n<legend>Contac Details</legend>\\n  <table class=\\\"table\\\">\\n    <thead>\\n    <tr>    \\n      <th>Id</th>\\n      <th>Name</th>\\n      <th>User Name</th>\\n      <th>Email</th>\\n      <th>City</th>\\n      <th>ZipCode</th>\\n </tr></thead>\\n <tbody>\\n <tr *ngFor=\\\"let usr of usersDetail\\\">\\n    <td>{{usr.id}}</td>\\n   <td>{{usr.name}}</td>\\n   <td>{{usr.username}}</td>\\n   <td>{{usr.email}}</td>\\n   <td>{{usr.address.city}}</td>\\n   <td>{{usr.address.zipcode}}</td>\\n</tr></tbody>\\n  </table>\\n  <pagination-controls  maxSize=\\\"5\\\"\\n  previousLabel=\\\"Previous\\\"\\n  nextLabel=\\\"Next\\\" \\n  screenReaderPaginationLabel=\\\"Pagination\\\"\\n screenReaderPageLabel=\\\"page\\\"\\n ></pagination-controls>\\n  <button class=\\\"col-sm-2 btn btn-warning form-control\\\"> Pervious</button>&nbsp;\\n  <button class=\\\"col-sm-2 btn btn-info form-control\\\"> Next</button>\\n\\n</fieldset>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { WeatherServiceService } from '../weather-service.service';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-contact-detail',\n  templateUrl: './contact-detail.component.html',\n  styleUrls: ['./contact-detail.component.css'],\n  providers:[WeatherServiceService]\n\n})\nexport class ContactDetailComponent implements OnInit {\nusersDetail = [];\n  constructor(private http: HttpClient, private wser: WeatherServiceService) {\n    //this.usersDetail = wser.getUsersFormApi();\n    this.http.get('https://jsonplaceholder.typicode.com/users').subscribe((data:any[]) => {\n      this.usersDetail = data;\n      console.log(data)\n      console.log(this.usersDetail +' apiuseers')\n   });\n\n   }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRhY3QtbGlzdC9jb250YWN0LWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\n<div class=\\\"col-md-6\\\">\\n  <fieldset>\\n  <legend>Contac List</legend>\\n  \\n<ul class=\\\"list-group \\\">\\n  <li *ngFor=\\\"let usr of list; let i = index;let evn=even; let i = index;\\\" [ngClass]=\\\"{ 'list-group-item':true,'bg-light':evn}\\\">\\n    <i class=\\\"fa fa-address-book-o\\\" aria-hidden=\\\"true\\\"></i>&nbsp;\\n    {{usr.name + '    ' + usr.city +'   '+usr.contact}}</li>\\n</ul>\\n</fieldset>\\n</div>\\n<!---\\n\\n        \\\"id\\\": 1,\\n        \\\"name\\\": \\\"Leanne Graham\\\",\\n        \\\"username\\\": \\\"Bret\\\",\\n        \\\"email\\\": \\\"Sincere@april.biz\\\",\\n        \\\"address\\\": {\\n            \\\"street\\\": \\\"Kulas Light\\\",\\n            \\\"suite\\\": \\\"Apt. 556\\\",\\n            \\\"city\\\": \\\"Gwenborough\\\",\\n            \\\"zipcode\\\": \\\"92998-3874\\\",\\n            \\\"geo\\\": {\\n                \\\"lat\\\": \\\"-37.3159\\\",\\n                \\\"lng\\\": \\\"81.1496\\\"\\n\\n\\n\\n\\n-->\"","import { Component, OnInit } from '@angular/core';\nimport {WeatherServiceService} from '../weather-service.service';\n\n@Component({\n  selector: 'app-contact-list',\n  templateUrl: './contact-list.component.html',\n  styleUrls: ['./contact-list.component.css'],\n  providers:[WeatherServiceService]\n})\nexport class ContactListComponent implements OnInit {\n  list:any[];\n  constructor(private wservice: WeatherServiceService) { \n    this.list = []\n    for(let i of this.wservice.getUserList()){\n      this.list.push(i);\n      console.log(this.list);\n    }\n\n  }\n  ngOnInit() {\n    \n  }\n\n}\n","module.exports = \".grid-container {\\n  margin: 20px;\\n}\\n\\n.dashboard-card {\\n  position: absolute;\\n  top: 15px;\\n  left: 15px;\\n  right: 15px;\\n  bottom: 15px;\\n}\\n\\n.more-button {\\n  position: absolute;\\n  top: 5px;\\n  right: 10px;\\n}\\n\\n.dashboard-card-content {\\n  text-align: center;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbXktZGFzaGJvYXJkL215LWRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtDQUNkOztBQUVEO0VBQ0UsbUJBQW1CO0VBQ25CLFVBQVU7RUFDVixXQUFXO0VBQ1gsWUFBWTtFQUNaLGFBQWE7Q0FDZDs7QUFFRDtFQUNFLG1CQUFtQjtFQUNuQixTQUFTO0VBQ1QsWUFBWTtDQUNiOztBQUVEO0VBQ0UsbUJBQW1CO0NBQ3BCIiwiZmlsZSI6InNyYy9hcHAvbXktZGFzaGJvYXJkL215LWRhc2hib2FyZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmdyaWQtY29udGFpbmVyIHtcbiAgbWFyZ2luOiAyMHB4O1xufVxuXG4uZGFzaGJvYXJkLWNhcmQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMTVweDtcbiAgbGVmdDogMTVweDtcbiAgcmlnaHQ6IDE1cHg7XG4gIGJvdHRvbTogMTVweDtcbn1cblxuLm1vcmUtYnV0dG9uIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDVweDtcbiAgcmlnaHQ6IDEwcHg7XG59XG5cbi5kYXNoYm9hcmQtY2FyZC1jb250ZW50IHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuIl19 */\"","module.exports = \"<div class=\\\"grid-container\\\">\\n  <h1 class=\\\"mat-h1\\\">Dashboard</h1>\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"350px\\\">\\n    <mat-grid-tile *ngFor=\\\"let card of cards | async\\\" [colspan]=\\\"card.cols\\\" [rowspan]=\\\"card.rows\\\">\\n      <mat-card class=\\\"dashboard-card\\\">\\n        <mat-card-header>\\n          <mat-card-title>\\n            {{card.title}}\\n            <button mat-icon-button class=\\\"more-button\\\" [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Toggle menu\\\">\\n              <mat-icon>more_vert</mat-icon>\\n            </button>\\n            <mat-menu #menu=\\\"matMenu\\\" xPosition=\\\"before\\\">\\n              <button mat-menu-item>Expand</button>\\n              <button mat-menu-item>Remove</button>\\n            </mat-menu>\\n          </mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content class=\\\"dashboard-card-content\\\">\\n          <div>Card Content Here</div>\\n        </mat-card-content>\\n      </mat-card>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-my-dashboard',\n  templateUrl: './my-dashboard.component.html',\n  styleUrls: ['./my-dashboard.component.css'],\n})\nexport class MyDashboardComponent {\n  /** Based on the screen size, switch from standard to one column per row */\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          { title: 'Card 1', cols: 1, rows: 1 },\n          { title: 'Card 2', cols: 1, rows: 1 },\n          { title: 'Card 3', cols: 1, rows: 1 },\n          { title: 'Card 4', cols: 1, rows: 1 }\n        ];\n      }\n\n      return [\n        { title: 'Card 1', cols: 2, rows: 1 },\n        { title: 'Card 2', cols: 1, rows: 1 },\n        { title: 'Card 3', cols: 1, rows: 2 },\n        { title: 'Card 4', cols: 1, rows: 1 }\n      ];\n    })\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItcmVnaXN0ZXIvdXNlci1yZWdpc3Rlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n    <form>\\n      <div class=\\\"form-group\\\">\\n      Email <input class=\\\"form-control col-sm-4\\\">\\n    </div>\\n      <div class=\\\"form-group\\\">\\n            Name <input  class=\\\"form-control col-sm-4\\\">\\n      </div>\\n        <div class=\\\"form-group\\\">\\n            Mobile <input type=\\\"number\\\" class=\\\"form-control col-sm-4\\\">\\n        </div>\\n  \\n      <div class=\\\"form-group\\\">\\n      Password <input class=\\\"form-control col-sm-4\\\" type=\\\"password\\\">\\n      </div>\\n  \\n      <select class=\\\"form-control col-sm-4\\\">\\n        <option>India</option>\\n        <option>United State</option>\\n      </select><br>\\n      <button class=\\\"col-sm-4 btn btn-primary form-control\\\"> Submit</button>\\n    </form>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-register',\n  templateUrl: './user-register.component.html',\n  styleUrls: ['./user-register.component.css']\n})\nexport class UserRegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherServiceService {\nuserList:any[];\napiUsers = [] ;\n  constructor(private http:HttpClient) { \n    this.getUsersFormApi();\n  }\n  getUsersFormApi(): any[]{\n    this.http.get('https://jsonplaceholder.typicode.com/users').subscribe((data:any[]) => {\n       this.apiUsers = data;\n       console.log(data)\n       console.log(this.apiUsers +' apiuseers')\n    });\n      \n      return this.apiUsers;\n  }\n\n\n\n\n\n\n  getUserList(){\n   return this.userList =[{name:\"Minhaj\",city:\"Hyderabad\",contact:9572111010},\n                    {name:\"Noman\",city:\"Patna\",contact:9585211010},\n                    {name:\"Shravan\",city:\"Banglore\",contact:9589571010},\n                    {name:\"Abid\",city:\"Dhanbad\",contact:9693215210},\n                    {name:\"Mathur\",city:\"Naampally\",contact:9124511010},\n                    {name:\"Sumanth\",city:\"Kerela\",contact:9996321010},\n                    {name:\"Harish\",city:\"Dargaa\",contact:9885641010}\n    ];\n\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dlaHRoZXItY29tcG9uZW50L3dlaHRoZXItY29tcG9uZW50LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <form [formGroup]='weatherForm' novalidate>\\n    <div class=\\\"form-group\\\">\\n    Email <input formControlName='email' class=\\\"form-control col-sm-4\\\">\\n    <span *ngIf=\\\"weatherForm.get('email').hasError('email') && weatherForm.get('email').touched\\\" \\n        class=\\\"alert-danger\\\">\\n        please enter valid Name </span>\\n\\n\\n        <span *ngIf=\\\"!weatherForm.get('email').hasError('email') && weatherForm.get('email').touched\\\" \\n        class=\\\"alert-success\\\">\\n        Email Accepted</span>\\n    \\n      </div>\\n\\n    <div class=\\\"form-group\\\">\\n    Password <input formControlName='password' class=\\\"form-control col-sm-4\\\" type=\\\"password\\\">\\n    <span *ngIf=\\\"!weatherForm.get('password').valid && weatherForm.get('password').touched\\\"\\n      [ngClass]=\\\"{'alert-danger':!weatherForm.get('password').valid }\\\">\\n         Atleast 8 char required </span>\\n     <span *ngIf=\\\"weatherForm.get('password').valid && weatherForm.get('password').touched\\\"\\n      [ngClass]=\\\"{'alert-success' :weatherForm.get('password').valid }\\\">\\n         Password Accepted</span>\\n    </div>\\n\\n    <select class=\\\"form-control col-sm-4\\\">\\n      <option>India</option>\\n      <option>United State</option>\\n    </select><br>\\n    <button class=\\\"col-sm-4 btn btn-warning form-control\\\"> Login </button>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-wehther-component',\n  templateUrl: './wehther-component.component.html',\n  styleUrls: ['./wehther-component.component.css']\n})\nexport class WehtherComponentComponent implements OnInit {\n  weatherForm: FormGroup;\n\n  constructor() {\n\n   }\n\n  ngOnInit() {\n    this.weatherForm = new FormGroup({\n      email : new FormControl(null,[Validators.required,Validators.email]),\n      password : new FormControl(null,[Validators.required,Validators.minLength(8)])\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}